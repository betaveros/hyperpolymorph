`e versions-used
1.7.1
`e show-version
`$[coffee --version]
`e hello-world
`e file-suffixes
`e bytecode-compiler-and-interpreter
`e native-compiler
`e interpreter
`$[coffee foo.coffee]
`e repl
`$[coffee]
`e command-line-program
`$[coffee -e 'var sys = require("sys");
  sys.puts("hi world!");']
`e library-which-is-always-imported
`e block-delimiters
indentation
`e statement-terminator
`e top-level-statements
`e source-code-encoding
`e end-of-line-comment
# comment
`e multiple-line-comment
###
comment
another comment
(will be preserved in generated JavaScript)
###
`e local-variable
x = 1
`e uninitialized-local-variable
`e regions-which-define-lexical-scope
`e global-variable
`e uninitialized-global-variable
`e constant
`e unit-type-and-value
`e assignment
x = 1
`e parallel-assignment
`e swap
[x, y] = [y, x]
`e compound-assignment-arithmetic-string-logical-bit
`e increment-and-decrement
`e address
`e dereference
`e type-size
`e address-arithmetic
`e unique-pointer
`e reference-count-pointer
`e weak-pointer
`e allocate-heap
`e uninitialized-heap
`e free-heap
`e null
`e nullable-type
`e null-test
v?
`e coalesce
foo = `=undefined
foo ? 4
`e nullif
`e conditional-expression
`*if x > 0 `*then x `*else -x
`e branch-type-mismatch
`e expression-type-declaration
`e let-in
`e where
`e boolean-type
`e true-and-false
`=true `=on `=yes
`=false `=off `=no
`e falsehoods
`e logical-operators
`+[&&] `*and `+[||] `*or `+[!] `*not
`e relational-expression
`e relational-operators
`e compare-strings
`e min-and-max
`e three-value-comparison
`e integer-type
`e integer-literal
`e unsigned-type
`e float-type
`e fixed-type
`e arithmetic-expression
`e arithmetic-operators
`e integer-operators
`e float-operators
`e add-integer-and-float
`e integer-division
`e divmod
`e integer-division-by-zero
`e float-division
`e float-division-by-zero
`e power
`e sqrt
`e sqrt-1
`e transcendental-functions
`e transcendental-constants
`e float-truncation
`e absolute-value-and-signum
`e arbitrary-length-integer
`e arbitrary-length-integer-operators
`e integer-overflow
`e float-overflow
`e float-limits-largest-finite-float-smallest-positive-float
`e rational-type
`e rational-construction
`e rational-decomposition
`e complex-type
`e complex-constants
`e complex-construction
`e complex-decomposition-real-and-imaginary-component-argument-absolute-value-conjugate
`e complex-operators
`e random-number-uniform-integer-uniform-float-normal-float
`e random-seed
`e bit-operators
`e binary-octal-and-hex-literals
`e radix-convert-integer-to-and-from-string-with-radix
`e string-type
`e string-literal
`e newline-in-literal
`e literal-escapes
`e allocate-string
`e are-strings-mutable
`e custom-delimiters
`e here-document
`e variable-interpolation
count = 3
item = ball
alert "`%[#{count}] `%[#{item}]s" `(double-quoted strings only)
`e expression-interpolation
`e format
`e compare-strings
`e are-strings-mutable
`e copy-string
`e concatenate-strings
`e replicate-string
`e translate-case
`e capitalize
`e trim
`e pad
`e number-to-string
`e string-to-number
`e join
`e split
`e split-in-two
`e split-and-keep-delimiters
`e serialize
`e string-length
`e index-of-substring
`e extract-substring
`e extract-character
`e character-type
`e character-literal
`e test-character
`e chr-and-ord
`e to-array-of-characters
`e translate-characters
`e delete-characters
`e squeeze-characters
`e regex-type
`e literal-custom-delimited-literal
`e character-class-abbreviations
`e anchors
`e lookahead-positive-negative
`e match-test
`e case-insensitive-match-test
`e modifiers
`e substitution
`e match-prematch-postmatch
`e group-capture
`e named-group-capture
`e scan
`e backreference-in-match-and-substitution
`e recursive-regex
`e date-time-type
`e current-date-time
`e to-unix-epoch-from-unix-epoch
`e current-unix-epoch
`e date-and-time-to-string
`e format-date
`e strftime
`e default-format-example
`e strptime
`e parse-date
`e parse-date-w-o-format
`e date-subtraction
`e add-time-duration
`e date-parts
`e time-parts
`e build-date-time-from-parts
`e local-timezone
`e arbitrary-timezone
`e timezone-name-offset-from-utc-is-daylight-savings
`e microseconds
`e sleep
`e timeout
`e declare-on-stack
`e declare-on-heap
`e free-heap
`e array-initialization-list
`e array-size
`e array-lookup
`e array-update
`e array-out-of-bounds
`e array-copy
`e as-function-argument
`e array-iterate
`e array-sort
`e list-name
`e list-declare
`e head-and-tail-of-empty-list
`e list-literal
`e quote-words
`e list-size
`e capacity-get-increase
`e empty-list
`e empty-test
`e empty-test-and-clear
`e head
`e list-lookup
`e list-update
`e list-out-of-bounds
`e index-of-element
`e cons
`e slice
`e take
`e drop
`e last-and-butlast
`e manipulate-back
`e manipulate-front
`e concatenate
`e concatenate-two-lists-list-of-lists
`e list-replicate
`e list-copy
`e array-as-function-arguments
`e arrays-as-function-arguments
`e iterate-over-elements
`e iterate-over-indices-and-elements
`e iterate-over-range
`e instantiate-range-as-list
`e reverse
`e sort
`e dedupe
`e membership
`e map
`e filter
`e fold-from-left
`e fold-from-right
`e universal-test
`e existential-test
`e intersection
`e union
`e relative-complement-symmetric-difference
`e min-and-max-element
`e shuffle-and-sample
`e zip
`e zip-lists
`e declare-pair
`e lookup-pair-elements
`e update-pair-elements
`e pair-element-access
`e tuple
`e declare-tuple
`e tuple-element-access
`e lookup-tuple-elements
`e update-tuple-elements
`e tuple-size
`e create-references-for-tuple-elements
`e map-declaration
`e map-access
`e map-size
`e map-remove-element
`e map-element-not-found-result
`e map-iterate
`e map-literal
`e map-lookup
`e map-out-of-bounds
`e is-key-present
`e delete-entry
`e from-array-of-pairs-from-even-length-array
`e merge
`e invert
`e iteration
`e keys-and-values-as-arrays
`e sort-by-values
`e default-value-computed-value
`e declare-function
`e define-function
`e define-function-with-block-body
`e invoke-function
add(1, 2)
add 1, 2
`e apply-function-to-array
`e define-static-class-method
`e invoke-static-class-method
`e overload-function
`e missing-argument-behavior
`e extra-arguments
`e default-argument
myLog = (x, base = 10) -> Math.log(x) / Math.log(base)
`e variable-number-of-arguments
`e named-parameters
`e named-parameter-default-value
`e pass-by-value
`e pass-by-reference
`e pass-by-address
`e pass-number-or-string-by-reference
`e pass-array-or-dictionary-by-reference
`e return-value
`e no-return-value
`e multiple-return-values
`e piecewise-defined-function
`e recursive-function
`e mutually-recursive-functions
`e lambda
square = (x) `+[->] x * x
`e lambda-invocation
`e closure
`e function-as-value
`e function-with-private-state
`e generator
`e decorator
`e operator-as-function
`e overload-operator
`e default-scope
`e default-value
`e nested-function-visibility
`e infix-operator-in-prefix-position
`e function-in-infix-position
`e currying
`e composition
`e function-composition-operator
`e lazy-evaluation
`e strict-evaluation
`e if
`*if 0 == n
  alert "no hits"
`*else `*if 1 == n
  alert "1 hit"
`*else
  alert n + "hits"
`e dangling-else
`e sequencing
`e switch
`*switch n
  `*when 0 `*then "no hits"
  `*when 1 `*then "one hit"
  `*else "#{n} hits"
`e while
`*while i < 100
  i += 1
`(when used as an expression, returns array containing result of each iteration)
`(alternate)
i += 1 `*while i < 100
`e for
`*for i `*in [0...10]
  alert i

name `*for name `*of window `(iterate over properties)
`e for-in-reverse
`e c-style-for
`e break
`e break-out-of-nested-loops
`e continue
`e goto
`e break-continue-redo
`e control-structure-keywords
`e what-do-does
immediately invokes a function, forwarding arguments (useful for forcing closure)
`e statement-modifiers
`e generator
`e list-iteration
`e base-exception
`e type-of-exceptions
`e predefined-exceptions
`e standard-exceptions
`e define-exception
`e user-defined-exception
`e raise-exception
`e re-raise-exception
`e handle-exception
`e catch-exception
`e catch-exception-by-type
`e catch-all-handler
`e global-variable-for-last-exception
`e finally
`e multiple-handlers
`e uncaught-exception-behavior
`e error-message
`e system-call-errno
`e exception-specification
`e assert
`e raise-error
`e handle-error
`e start-thread
`e terminate-current-thread
`e terminate-other-thread
`e list-threads
`e wait-on-thread
`e lock
`e create-message-queue
`e send-message
`e receive-message
`e standard-file-handles
`e read-line-from-stdin
`e write-line-to-stdout
`e printf
`e open-file
`e open-file-for-reading
`e open-file-for-writing
`e open-file-for-appending
`e set-file-handle-encoding
`e read-line
`e chomp
`e read-file
`e read-from-file
`e iterate-over-file-by-line
`e read-file-into-string
`e read-file-into-array-of-strings
`e write-to-file
`e write-string
`e write-line
`e flush-file-handle
`e close-file
`e close-file-implicitly
`e end-of-file-test
`e end-of-file-behavior
`e i-o-error
`e i-o-errors
`e encoding-error
`e get-and-set-filehandle-position
`e open-temporary-file
`e in-memory-file
`e file-exists-test-file-regular-test
`e file-size
`e is-file-readable-writable-executable
`e set-file-permissions
`e copy-file-remove-file-rename-file
`e create-symlink-symlink-test-readlink
`e generate-unused-file-name
`e last-modification-time
`e csv
`e parse-csv
`e generate-csv
`e generate-xml
`e parse-html
`e json
`e json-generate-parse
`e build-xml
`e parse-xml
`e parse-xml-all-nodes-matching-xpath-query-first-node-matching-xpath-query
`e parse-html
`e working-directory
`e build-pathname
`e dirname-and-basename
`e absolute-pathname
`e absolute-pathname-and-tilde-expansion
`e iterate-over-directory-by-file
`e glob-paths
`e make-directory
`e recursive-copy
`e remove-empty-directory
`e remove-directory-and-contents
`e directory-test
`e generate-unused-directory
`e generate-unused-directory-name
`e system-temporary-file-directory
`e exit
`e program-name
`e command-line-arguments
`e command-line-arguments-and-script-name
`e signature-of-main
`e first-argument
`e getopt
`e get-and-set-environment-variable
`e get-pid-parent-pid
`e get-user-id-and-name
`e environment-variable
`e iterate-through-environment-variables
`e exit
`e set-signal-handler
`e executable-test
`e external-command
`e escaped-external-command
`e backticks
`e command-line-options-boolean-option-option-with-argument-usage
`e library
`e load-library
`e load-library-in-subdirectory
`e hot-patch
`e load-error
`e standard-library-name
`e main-routine-in-library
`e library-path
`e library-path-environment-variable
`e library-path-command-line-option
`e declare-namespace
`e simple-global-identifiers
`e multiple-label-identifiers
`e label-separator
`e root-namespace-definition
`e declare-namespace
`e child-namespace-declaration
`e namespace-alias
`e unqualified-import-of-namespace
`e unqualified-import-of-all-subnamespaces
`e unqualified-import-of-definitions
`e list-installed-packages-install-a-package
`e package-specification-format
`e namespace-example
`e namespaces
`e file-name-restrictions
`e namespace
`e namespace-creation
`e namespace-alias
`e namespace-separator
`e subnamespace
`e namespace-separator
`e multiple-namespaces-per-file
`e namespaces-map-to-directories
`e import-namespace
`e import-library
`e import-part-of-namespace
`e import-symbol
`e import-static-symbol
`e import-position
`e using-a-symbol-that-hasn-t-been-imported
`e application-environment
`e multiple-installations
`e package-manager
`e package-manager-setup
`e list-installed-packaged-install-a-package
`e package-manager-search-install-list-installed
`e library-path
`e library-path-environment-variable
`e compile-app-using-package
`e typedef
`e type-synonym
`e sum-type
`e tuple-product-type-with-one-field
`e tuple-product-type-with-two-fields
`e enum
`e struct-definition
`e struct-declaration
`e struct-initialization
`e struct-member-assignment
`e struct-member-access
`e record-product-type
`e record-product-type-literal
`e recursive-type
`e pattern-match-sum-type
`e pattern-match-product-type
`e pattern-match-guard
`e pattern-match-catchall
`e generic-type
`e define-generic-type
`e instantiate-generic-type
`e generic-function
`e generic-array
`e value-parameter
`e template-parameter
`e template-specialization
`e multiple-type-parameters
`e generic-type-parameters
`e template-parameters
`e variadic-template
`e semantics-of
`e define-class
`e class-definition-location
`e constructor
`e create-object
`e create-blank-object
`e instance-variable-visibility
`e get-and-set-instance-variable
`e set-attribute
`e get-attribute
`e destructor
`e destroy-object
`e define-method
`e invoke-method
`e define-class-method
`e invoke-class-method
`e define-class-variable
`e get-and-set-class-variable
`e handle-undefined-method-invocation
`e clone-object
`e object-literal
`e name-of-receiver
`e access-control
`e anonymous-class
`e alias-method
`e destructor
`e subclass
`e dynamic-dispatch
`e static-dispatch
`e mixin
`e overload-function
`e overload-operator
`e subclass
`e inheritance
`e invoking-superclass-constructor
`e mark-class-underivable-or-method-unoverrideable
`e root-class
`e root-class-methods
`e get-type-class-of-object
`e get-type-class-from-string
`e get-type-class-from-type-identifier
`e inspect-class
`e inspect-class-hierarchy
`e object-id
`e inspect-type
`e basic-types
`e class-name
`e get-methods
`e has-method
`e invoke-method-object
`e inspect-type
`e has-method
`e message-passing
`e eval
`e inspect-methods
`e inspect-attributes
`e list-obj-object-methods
`e list-object-attributes
`e list-loaded-libraries
`e list-loaded-namespaces
`e inspect-namespace
`e pretty-print
`e source-line-number-and-file-name
`e command-line-documentation
`e get-local-hostname-dns-lookup-reverse-dns-lookup
`e http-get
`e http-post
`e serve-working-directory
`e absolute-url
`e absolute-url-from-base-and-relative-url
`e parse-url
`e url-encode-decode
`e base64-encode-decode
`e test-class
`e run-tests-run-test-method
`e run-all-tests
`e equality-assertion
`e approximate-assertion
`e regex-assertion
`e exception-assertion
`e mock-method
`e setup
`e teardown
`e check-syntax
`e stronger-warnings
`e stronger-warnings
`e suppress-warnings
`e treat-warnings-as-errors
`e run-debugger
`e debugger-commands-help-list-source-re-load-executable-next-step-set-breakpoint-show-breakpoints-delete-breakpoint-continue-backtrace-up-stack-down-stack-print-run-quit
`e debugger-commands
`e benchmark-code
`e profile-code
`e memory-tool
`e lint
`e source-cleanup
`e invoke-repl
`e repl-limitations
`e repl-last-value
`e help
`e quit
`e inspect-type
`e inspect-namespace
`e load-source-file
`e load-package
`e search-path
`e set-search-path-on-command-line
`e java-version
`e java-repl
`e java-interpreter
`e java-compiler
`e java-prologue
`e java-new
`e java-method
`e java-import
`e non-bundled-java-libraries
`e java-shadowing-avoidance
`e convert-native-array-to-java-array
`e are-java-classes-subclassable
`e are-java-class-open
