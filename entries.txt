# general
versions-used: versions used
show-version: show version
implicit-prologue: implicit prologue
# grammar and invocation
hello-world: hello world
file-suffixes-source-header-object-file: file suffixes / source, header, object file
bytecode-compiler-and-interpreter: bytecode compiler and interpreter
native-compiler: native compiler
interpreter: interpreter
repl: repl
command-line-program: command line program
library-which-is-always-imported: library which is always imported
block-delimiters: block delimiters
statement-terminator: statement separator
top-level-statements: top level statements
source-code-encoding: source code encoding
end-of-line-comment: end-of-line comment
multiple-line-comment: multiple line comment
# variables and expressions
local-variable: local, modifiable variable
uninitialized-local-variable: uninitialized local variable
regions-which-define-lexical-scope: regions which define lexical scope
global-variable: global variable
uninitialized-global-variable: uninitialized global variable
constant: constant
unit-type-and-value: unit type and value
assignment: assignment
parallel-assignment: parallel assignment
swap: swap
compound-assignment-arithmetic-string-logical-bit: compound assignment / arithmetic, string, logical, bit
increment-and-decrement: increment and decrement
address: address
dereference: dereference
type-size: type size
address-arithmetic: address arithmetic
unique-pointer: unique pointer
reference-count-pointer: reference count pointer
weak-pointer: weak pointer
allocate-heap: allocate heap
uninitialized-heap: uninitialized heap
free-heap: free heap
null: null
nullable-type: nullable type
null-test: null test
coalesce: coalesce
nullif: nullif
undefined-variable-access: undefined variable access
conditional-expression: conditional expression
branch-type-mismatch: branch type mismatch
expression-type-declaration: expression type declaration
let-in: let ... in ...
where: where
# arithmetic and logic
boolean-type: boolean type
true-and-false: true and false
falsehoods: falsehoods
logical-operators: logical operators
relational-expression: relational expression
relational-operators: relational operators
compare-strings: compare strings
min-and-max: min and max
three-value-comparison: three value comparison
integer-type: integer type
integer-literal: integer literal
unsigned-type: unsigned type
float-type: float type
fixed-type: fixed type
arithmetic-expression: arithmetic expression
arithmetic-operators: arithmetic operators / addition, subtraction, multiplication, float division, quotient, remainder
integer-operators: integer operators
float-operators: float operators
add-integer-and-float: add integer and float
integer-division: integer division
divmod: divmod
integer-division-by-zero: integer division by zero
float-division: float division
float-division-by-zero: float division by zero
power: power
sqrt: sqrt
sqrt-1: sqrt -1
transcendental-functions: transcendental functions
transcendental-constants: transcendental constants / Ï€ and e
float-truncation: float truncation
absolute-value: absolute value
absolute-value-and-signum: absolute value / and signum
arbitrary-length-integer: arbitrary length integer
arbitrary-length-integer-operators: arbitrary length integer operators
integer-overflow: integer overflow
float-overflow: float overflow
float-limits-largest-finite-float-smallest-positive-float: float limits / largest finite float, smallest positive float
rational-type: rational type
rational-construction: rational construction
rational-decomposition: rational decomposition
complex-type: complex type
complex-constants: complex constants
complex-construction: complex construction
complex-decomposition-real-and-imaginary-component-argument-absolute-value-conjugate: complex decomposition / real and imaginary component, argument, absolute value, conjugate
complex-operators: complex operators
random-number-uniform-integer-uniform-float-normal-float: random number / uniform integer, uniform float, normal float
random-seed: random seed / set, get, restore
bit-operators: bit operators
binary-octal-and-hex-literals: binary, octal, and hex literals
radix-convert-integer-to-and-from-string-with-radix: radix / convert integer to and from string with radix
# strings
string-type: string type
string-literal: string literal
newline-in-literal: newline in literal
literal-escapes: literal escapes
allocate-string: allocate string
are-strings-mutable: are strings mutable?
custom-delimiters: custom delimiters
here-document: here document
variable-interpolation: variable interpolation
expression-interpolation: expression interpolation
format: format
sprintf: sprintf
compare-strings: compare strings
are-strings-mutable: are strings mutable?
copy-string: copy string
concatenate-strings: concatenate strings / and append
replicate-string: replicate string
translate-case: translate case / to upper, to lower
capitalize: capitalize / string, words
trim: trim / both sides, left, right
pad: pad / on right, on left, centered
number-to-string: number to string
string-to-number: string to number
join: join
split: split
split-in-two: split in two
split-and-keep-delimiters: split and keep delimiters
serialize: serialize
string-length: string-length
index-of-substring: index of substring / first, last
extract-substring: extract substring / by start and length, by start and end, by successive starts
extract-character: extract character
character-type: character type
character-literal: character literal
test-character-letter-digit-whitespace-uppercase-letter-lowercase-letter: test character / letter, digit, whitespace, uppercase letter, lowercase letter
chr-and-ord: chr and ord
to-array-of-characters: to array of characters
translate-characters: translate characters
delete-characters: delete characters
squeeze-characters: squeeze characters
# regular expressions
regex-type: regex type
literal-custom-delimited-literal: literal, custom delimited literal
character-class-abbreviations: character class abbreviations
anchors: anchors
lookahead-positive-negative: lookahead / positive, negative
match-test: match test
case-insensitive-match-test: case insensitive match test
modifiers: modifiers
substitution: substitution
match-prematch-postmatch: match, prematch, postmatch
group-capture: group capture
named-group-capture: named group capture
scan: scan
backreference-in-match-and-substitution: backreference in match and substitution
recursive-regex: recursive regex
# dates and time
date-time-type: date/time type
current-date-time: current date/time
to-unix-epoch-from-unix-epoch: to unix epoch, from unix epoch
current-unix-epoch: current unix epoch
date-and-time-to-string: date and time to string
format-date: format date
strftime: strftime
default-format-example: default format example
strptime: strptime
parse-date: parse date
parse-date-w-o-format: parse date w/o format
date-subtraction: result of date subtraction
add-time-duration: add time duration
date-parts: date parts
time-parts: time parts
build-date-time-from-parts: build date/time from parts
local-timezone: local timezone
arbitrary-timezone: arbitrary timezone
timezone-name-offset-from-utc-is-daylight-savings: timezone name; offset from UTC; is daylight savings?
microseconds: microseconds
sleep: sleep
timeout: timeout
# fixed-length arrays
declare-on-stack: declare on stack
declare-on-heap: declare on heap
free-heap: free heap
initialization-list: initialization list
array-size: size
lookup: lookup
update: update
out-of-bounds: out-of-bounds
copy: copy
as-function-argument: as function argument
iterate: iterate
sort: sort
# lists (or most common variable-size sequential data structure)
list-name: name
list-declare: declare
head-and-tail-of-empty-list: head and tail of empty list
list-literal: literal
initialization-list: initialization list
quote-words: quote words
list-size: size
capacity-get-increase: capacity / get, increase
empty-list: empty list
empty-test: empty test
empty-test-and-clear: empty test / and clear
head: head
list-lookup: lookup
list-update: update
out-of-bounds-behavior: out-of-bounds behavior
index-of-element: index of element
cons: cons
slice: slice / by endpoints, by length
slice-to-end: slice to end
tail: tail
last-and-butlast: last / and butlast
manipulate-back: manipulate back
manipulate-front: manipulate front
take: take
drop: drop
concatenate: concatenate
concatenate-two-lists-list-of-lists: concatenate / two lists, list of lists
replicate: replicate
copy: copy / address copy, shallow copy, deep copy
array-as-function-arguments: array as function arguments
arrays-as-function-arguments: arrays as function arguments
iterate: iterate
iterate-over-elements: iterate over elements
iterate-over-indices-and-elements: iterate over indices and elements
iterate-over-range: iterate over range
indexed-iteration: indexed iteration
instantiate-range-as-array: instantiate range as array
reverse: reverse / non-destructive, in-place
sort: sort / non-destructive, /  / in-place, /  / custom comparision
dedupe: dedupe / non-destructive, in-place
membership: membership
map: map
filter: filter
reduce: reduce
fold-from-left: fold from left
fold-from-right: fold from right
universal-test: universal test
existential-test: existential test
intersection: intersection
union: union
relative-complement-symmetric-difference: relative complement, symmetric difference
min-and-max-element: min and max element
universal-and-existential-tests: universal and existential tests
shuffle-and-sample: shuffle and sample
zip: zip
zip-lists: zip lists
# tuples
declare-pair: declare pair
lookup-pair-elements: lookup pair elements
update-pair-elements: update pair elements
pair-element-access: pair element access
tuple: tuple
declare-tuple: declare tuple
tuple-element-access: tuple element access
lookup-tuple-elements: lookup tuple elements
update-tuple-elements: update tuple elements
tuple-size: tuple size
create-references-for-tuple-elements: create references for tuple elements
# maps or dictionaries
map-declaration: map declaration
map-access: map access
map-size: map size
map-remove-element: map remove element
map-element-not-found-result: map element not found result
map-iterate: map iterate
map-literal: literal
map-lookup: lookup
map-out-of-bounds-behavior: out-of-bounds behavior
is-key-present: is key present
delete-entry: delete entry
from-array-of-pairs-from-even-length-array: from array of pairs, from even length array
merge: merge
invert: invert
iteration: iteration
keys-and-values-as-arrays: keys and values as arrays
sort-by-values: sort by values
default-value-computed-value: default value, computed value
# functions
declare-function: declare function
define-function: define function
define-function-with-block-body: define function with block body
invoke-function: invoke function
apply-function-to-array: apply function to array
define-static-class-method: define static class method
invoke-static-class-method: invoke static class method
overload-function: overload function
missing-argument-behavior: missing argument behavior
extra-arguments: extra arguments
default-argument: default argument
variable-number-of-arguments: variable number of arguments
named-parameters: named parameters
named-parameter-default-value: named parameter default value
pass-by-value: pass by value
pass-by-reference: pass by reference
pass-by-address: pass by address
pass-number-or-string-by-reference: pass number or string by reference
pass-array-or-dictionary-by-reference: pass array or dictionary by reference
return-value: return value
no-return-value: no return value
multiple-return-values: multiple return values
piecewise-defined-function: piecewise defined function
recursive-function: recursive function
mutually-recursive-functions: mutually recursive functions
anonymous-function: anonymous function
invoke-anonymous-function: invoke anonymous function
lambda-declaration: lambda declaration
lambda-invocation: lambda invocation
closure: closure
function-as-value: function as value
function-with-private-state: function with private state
generator: generator
decorator: decorator
operator-as-function: operator as function
overload-operator: overload operator
default-scope: default scope
default-value: default value
nested-function-visibility: nested function visibility
infix-operator-in-prefix-position: infix operator in prefix position
function-in-infix-position: function in infix position
currying: currying
composition: composition
function-composition-operator: function composition operator
lazy-evaluation: lazy evaluation
strict-evaluation: strict evaluation
# execution control
if: if
dangling-else: dangling else
sequencing: sequencing
switch: switch
while: while
for: for
for-in-reverse: for in reverse
c-style-for: c-style for
break: break
break-out-of-nested-loops: break out of nested loops
continue: continue
goto: goto
break-continue-redo: break, continue, redo
control-structure-keywords: control structure keywords
what-do-does: what do does
statement-modifiers: statement modifiers
generator: generator
list-iteration: list iteration
# exceptions
base-exception: base exception
type-of-exceptions: type of exceptions
predefined-exceptions: predefined exceptions
standard-exceptions: standard exceptions
define-exception: define exception
user-defined-exception: user defined exception
raise-exception: raise exception
re-raise-exception: re-raise exception
handle-exception: handle exception
catch-exception: catch exception
catch-exception-by-type: catch exception by type
catch-all-handler: catch-all handler
global-variable-for-last-exception: global variable for last exception
finally-ensure: finally/ensure
multiple-handlers: multiple handlers
uncaught-exception-behavior: uncaught exception behavior
error-message: error message
system-call-errno: system call errno
finally-clause: finally clause
exception-specification: exception specification
assert: assert
# errors
raise-error: raise error
handle-error: handle error
# concurrency
start-thread: start thread
terminate-current-thread: terminate current thread
terminate-other-thread: terminate other thread
list-threads: list threads
wait-on-thread: wait on thread
lock: lock
create-message-queue: create message queue
send-message: send message
receive-message: receive message
# file handles
standard-file-handles: standard file handles
read-line-from-stdin: read line from stdin
write-line-to-stdout: write line to stdout
printf: printf
open-file: open file
open-file-for-reading: open file for reading
open-file-for-writing: open file for writing
open-file-for-appending: open file for appending
end-of-file-behavior: end-of-file behavior
close-file: close file
i-o-errors: i/o errors
read-line: read line
iterate-over-file-by-line: iterate over file by line
read-file-into-array-of-strings: read file into array of strings
read-file-into-string: read file into string
chomp: chomp
read-file: read file
read-from-file: read from file
write-to-file: write to file
write-string: write string
flush-file-handle: flush file handle
end-of-file-test: end-of-file test
get-and-set-filehandle-position: get and set filehandle position
# files
file-exists-test-file-regular-test: file exists test, file regular test
file-size: file size
is-file-readable-writable-executable: is file readable, writable, executable
set-file-permissions: set file permissions
copy-file-remove-file-rename-file: copy file, remove file, rename file
create-symlink-symlink-test-readlink: create symlink, symlink test, readlink
generate-unused-file-name: generate unused file name
# file formats
csv: csv
json: json
build-xml: build xml
parse-xml: parse xml
parse-html: parse html
# directories
build-pathname: build pathname
dirname-and-basename: dirname and basename
absolute-pathname: absolute pathname
iterate-over-directory-by-file: iterate over directory by file
glob-paths: glob paths
make-directory: make directory
recursive-copy: recursive copy
remove-empty-directory: remove empty directory
remove-directory-and-contents: remove directory and contents
directory-test: directory test
generate-unused-directory-name: generate unused directory name
system-temporary-file-directory: system temporary file directory
# processes and environment
exit: exit
program-name: program name
command-line-arguments: command line arguments
signature-of-main: signature of main
first-argument: first argument
getopt: getopt
get-and-set-environment-variable: get and set environment variable
get-pid-parent-pid: get pid, parent pid
get-user-id-and-name: get user id and name
environment-variable: environment variable
iterate-through-environment-variables: iterate through environment variables
exit: exit
set-signal-handler: set signal handler
external-command: external command
escaped-external-command: escaped external command
backticks: backticks
# libraries and namespaces
library: library
standard-library-name: standard library name
declare-namespace: declare namespace
namespace-example: namespace example
namespaces: namespaces
file-name-restrictions: file name restrictions
namespace: namespace
namespace-creation: namespace creation
namespace-alias: namespace alias
namespace-separator: namespace separator
subnamespace: subnamespace
namespace-separator: namespace separator
multiple-namespaces-per-file: multiple namespaces per file
namespaces-map-to-directories: namespaces map to directories
import-namespace: import namespace
import-library: import library
import-part-of-namespace: import part of namespace
import-symbol: import symbol
import-static-symbol: import static symbol
import-position: import position
using-a-symbol-that-hasn-t-been-imported: using a symbol that hasn't been imported
application-environment: application environment
multiple-installations: multiple installations
package-manager: package manager
package-manager-setup: package manager setup
list-installed-packaged-install-a-package: list installed packaged, install a package
package-manager-search-install-list-installed: package manager / search; install; list installed
library-path: library path
library-path-environment-variable: library path environment variable
compile-app-using-package: compile app using package
# user-defined types
typedef: typedef
type-synonym: type synonym
sum-type: sum type
tuple-product-type-with-one-field: tuple product type with one field
tuple-product-type-with-two-fields: tuple product type with two fields
enum: enum
struct-definition: struct definition
struct-declaration: struct declaration
struct-initialization: struct initialization
struct-member-assignment: struct member assignment
struct-member-access: struct member access
record-product-type: record product type
record-product-type-literal: record product type literal
recursive-type: recursive type
pattern-match-sum-type: pattern match sum type
pattern-match-product-type: pattern match product type
pattern-match-guard: pattern match guard
pattern-match-catchall: pattern match catchall
# generic types
generic-type: generic type
define-generic-type: define generic type
instantiate-generic-type: instantiate generic type
generic-function: generic function
generic-array: generic array
value-parameter: value parameter
template-parameter: template parameter
template-specialization: template specialization
multiple-type-parameters: multiple type parameters
generic-type-parameters: generic type parameters
template-parameters: template parameters
variadic-template: variadic template
# objects
semantics-of: semantics of ==
define-class: define class
class-definition-location: class definition location
constructor: constructor
create-object: create object
create-blank-object: create blank object
set-attribute: set attribute
get-attribute: get attribute
destructor: destructor
destroy-object: destroy object
define-method: define method
invoke-method: invoke method
define-class-method: define class method
invoke-class-method: invoke class method
clone-object: clone object
object-literal: object literal
name-of-receiver: name of receiver
access-control: access control
anonymous-class: anonymous class
# polymorphism
dynamic-dispatch: dynamic dispatch
static-dispatch: static dispatch
overload-function: overload function
subclass: subclass
inheritance: inheritance
invoking-superclass-constructor: invoking superclass constructor
mark-class-underivable-or-method-unoverrideable: mark class underivable or method unoverrideable
root-class: root class
root-class-methods: root class methods
# reflection
get-type-class-of-object: get type class of object
get-type-class-from-string: get type class from string
get-type-class-from-type-identifier: get type class from type identifier
class-name: class name
get-methods: get methods
has-method: has method
invoke-method-object: invoke method object
inspect-type: inspect type
has-method: has method?
message-passing: message passing
eval: eval
inspect-methods: inspect methods
inspect-attributes: inspect attributes
# net and web
get-local-hostname-dns-lookup-reverse-dns-lookup: get local hostname, dns lookup, reverse dns lookup
http-get: http get
http-post: http post
absolute-url: absolute url
parse-url: parse url
url-encode-decode: url encode/decode
base64-encode-decode: base64 encode/decode
# unit tests
test-class: test class
run-all-tests: run all tests
equality-assertion: equality assertion
approximate-assertion: approximate assertion
exception-assertion: exception assertion
setup: setup
teardown: teardown
# debugging and profiling
flag-for-stronger-warnings: flag for stronger warnings
suppress-warnings: suppress warnings
treat-warnings-as-errors: treat warnings as errors
run-debugger: run debugger
debugger-commands-help-list-source-re-load-executable-next-step-set-breakpoint-show-breakpoints-delete-breakpoint-continue-backtrace-up-stack-down-stack-print-run-quit: debugger commands / help, list source, (re)load executable, next, step, set breakpoint, show breakpoints, delete breakpoint, continue, backtrace, up stack, down stack, print, run, quit
benchmark-code: benchmark code
profile-code: profile code
memory-tool: memory tool
# repl
invoke-repl: invoke repl
repl-limitations: repl limitations
repl-last-value: repl last value
help: help
quit: quit
inspect-type: inspect type
inspect-namespace: inspect namespace
load-source-file: load source file
load-package: load package
search-path: search path
set-search-path-on-command-line: set search path on command line
